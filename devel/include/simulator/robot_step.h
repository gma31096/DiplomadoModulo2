// Generated by gencpp from file simulator/robot_step.msg
// DO NOT EDIT!


#ifndef SIMULATOR_MESSAGE_ROBOT_STEP_H
#define SIMULATOR_MESSAGE_ROBOT_STEP_H

#include <ros/service_traits.h>


#include <simulator/robot_stepRequest.h>
#include <simulator/robot_stepResponse.h>


namespace simulator
{

struct robot_step
{

typedef robot_stepRequest Request;
typedef robot_stepResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;

}; // struct robot_step
} // namespace simulator


namespace ros
{
namespace service_traits
{


template<>
struct MD5Sum< ::simulator::robot_step > {
  static const char* value()
  {
    return "aa748166a5bb70fc4aeb3cae4da517f9";
  }

  static const char* value(const ::simulator::robot_step&) { return value(); }
};

template<>
struct DataType< ::simulator::robot_step > {
  static const char* value()
  {
    return "simulator/robot_step";
  }

  static const char* value(const ::simulator::robot_step&) { return value(); }
};


// service_traits::MD5Sum< ::simulator::robot_stepRequest> should match 
// service_traits::MD5Sum< ::simulator::robot_step > 
template<>
struct MD5Sum< ::simulator::robot_stepRequest>
{
  static const char* value()
  {
    return MD5Sum< ::simulator::robot_step >::value();
  }
  static const char* value(const ::simulator::robot_stepRequest&)
  {
    return value();
  }
};

// service_traits::DataType< ::simulator::robot_stepRequest> should match 
// service_traits::DataType< ::simulator::robot_step > 
template<>
struct DataType< ::simulator::robot_stepRequest>
{
  static const char* value()
  {
    return DataType< ::simulator::robot_step >::value();
  }
  static const char* value(const ::simulator::robot_stepRequest&)
  {
    return value();
  }
};

// service_traits::MD5Sum< ::simulator::robot_stepResponse> should match 
// service_traits::MD5Sum< ::simulator::robot_step > 
template<>
struct MD5Sum< ::simulator::robot_stepResponse>
{
  static const char* value()
  {
    return MD5Sum< ::simulator::robot_step >::value();
  }
  static const char* value(const ::simulator::robot_stepResponse&)
  {
    return value();
  }
};

// service_traits::DataType< ::simulator::robot_stepResponse> should match 
// service_traits::DataType< ::simulator::robot_step > 
template<>
struct DataType< ::simulator::robot_stepResponse>
{
  static const char* value()
  {
    return DataType< ::simulator::robot_step >::value();
  }
  static const char* value(const ::simulator::robot_stepResponse&)
  {
    return value();
  }
};

} // namespace service_traits
} // namespace ros

#endif // SIMULATOR_MESSAGE_ROBOT_STEP_H
